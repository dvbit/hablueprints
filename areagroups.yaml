blueprint:
  name: Gruppo Dinamico per Dominio e Area (senza Python)
  description: Crea e aggiorna automaticamente un gruppo con tutte le entità di un dominio specifico in un'area usando solo automazioni native
  domain: automation
  input:
    target_domain:
      name: Dominio Target
      description: Il dominio delle entità da includere (es. light, switch, sensor)
      selector:
        text:
    target_area:
      name: Area Target
      description: L'area da cui prendere le entità
      selector:
        area:
    group_name:
      name: Nome del Gruppo
      description: Nome del gruppo da creare/aggiornare
      default: "gruppo_dinamico"
      selector:
        text:
    excluded_entities:
      name: Entità da Escludere
      description: Lista delle entità da escludere (separate da virgola)
      default: ""
      selector:
        text:
    update_interval:
      name: Intervallo di Aggiornamento
      description: Intervallo di aggiornamento in minuti
      default: 10
      selector:
        number:
          min: 1
          max: 1440
          unit_of_measurement: "minuti"

variables:
  domain: !input target_domain
  area_name: !input target_area  
  group_id: !input group_name
  excluded_list: !input excluded_entities
  # Converti la stringa delle entità escluse in una lista
  excluded_entities: >-
    {% if excluded_list %}
      {{ excluded_list.split(',') | map('trim') | list }}
    {% else %}
      []
    {% endif %}
  # Template per trovare tutte le entità del dominio nell'area specifica
  matching_entities: >-
    {% set ns = namespace(entities=[]) %}
    {% for entity_id, entity in states | dictsort %}
      {% if entity_id.startswith(domain + '.') %}
        {% set area = area_name(entity_id) %}
        {% if area == area_name and entity_id not in excluded_entities %}
          {% set ns.entities = ns.entities + [entity_id] %}
        {% endif %}
      {% endif %}
    {% endfor %}
    {{ ns.entities }}

trigger:
  - platform: time_pattern
    minutes: !input update_interval
  - platform: homeassistant
    event: start
  - platform: event
    event_type: area_registry_updated
  - platform: event
    event_type: entity_registry_updated

condition:
  - condition: template
    value_template: "{{ matching_entities | length > 0 }}"

action:
  - service: group.set
    data:
      object_id: "{{ group_id }}"
      name: "Gruppo {{ domain | title }} - {{ area_name }}"
      entities: "{{ matching_entities }}"
      icon: "mdi:folder-multiple"
  - service: logbook.log
    data:
      name: "Gruppo Dinamico"
      message: >-
        Gruppo '{{ group_id }}' aggiornato con {{ matching_entities | length }} entità: 
        {{ matching_entities | join(', ') }}

---
# Alternativa con template sensor per monitoraggio (opzionale)
# Aggiungi questa configurazione in configuration.yaml per monitorare il gruppo:

template:
  - sensor:
      - name: "Contatore Entità Gruppo Dinamico"
        unique_id: "contatore_gruppo_dinamico"
        state: >-
          {% set domain = 'light' %}  # Cambia con il tuo dominio
          {% set area_name = 'Salotto' %}  # Cambia con la tua area
          {% set excluded = [] %}  # Aggiungi entità da escludere
          {% set ns = namespace(count=0) %}
          {% for entity_id, entity in states | dictsort %}
            {% if entity_id.startswith(domain + '.') %}
              {% set area = area_name(entity_id) %}
              {% if area == area_name and entity_id not in excluded %}
                {% set ns.count = ns.count + 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ ns.count }}
        attributes:
          entities: >-
            {% set domain = 'light' %}  # Cambia con il tuo dominio
            {% set area_name = 'Salotto' %}  # Cambia con la tua area
            {% set excluded = [] %}  # Aggiungi entità da escludere
            {% set ns = namespace(entities=[]) %}
            {% for entity_id, entity in states | dictsort %}
              {% if entity_id.startswith(domain + '.') %}
                {% set area = area_name(entity_id) %}
                {% if area == area_name and entity_id not in excluded %}
                  {% set ns.entities = ns.entities + [entity_id] %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {{ ns.entities }}
        icon: mdi:counter
